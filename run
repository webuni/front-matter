#!/usr/bin/env sh
set -e

url="https://raw.githubusercontent.com/webuni/shell-task-runner/master/runner"
[ -f ./.runner ] || wget -q "$url" -O- > .runner || curl -fso .runner "$url"
. ./.runner

! mkdir -p ~/.composer/cache
if [ ! -f ~/.composer/auth.json ]; then echo "{}" > ~/.composer/auth.json; fi

_decorator()( _decorator_docker_compose_run "$@" )

symfony()( [ -n "$1" ] && echo "--with" "symfony/yaml:$1" || echo "" )

# Update dependencies to the latest versions
task_deps__latest()( _run composer update $(symfony "$1"))

# Update dependencies to the lowest versions
task_deps__lowest()( _run composer update --prefer-lowest $(symfony "$1"))

# Run composer
# @service php
task_composer()( composer "$@" )

# Run composer
# @service php
task_composer__normalize()( composer normalize "$@" )

# Run tests
# @service php
task_tests()( XDEBUG_MODE=coverage phpunit --colors=always --coverage-text --coverage-html coverage/html "$@" )

# Fix code style
# @service php
task_cs()( PHP_CS_FIXER_IGNORE_ENV=1 php-cs-fixer fix --ansi --allow-risky=yes "$@" )

# Analyse code
# @service php
task_analyse()( phpstan analyse --no-progress --ansi; __fn psalm && psalm || echo '' )

# Remove all containers in project (use -v to remove volumes also)
task_clean()( _docker_compose down --remove-orphans "$@" )

# Run shell with tools
# @service php
task_tools()( sh "$@" )

task_act__tests__latest()(
  act -j phpunit --matrix php:8.4 --matrix deps_strategy:
)
